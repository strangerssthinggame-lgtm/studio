
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can be read by anyone, but only written to by the owner.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Swipes can be created by any authenticated user.
    // Reading swipes should be restricted if necessary, but is not currently done by the app.
    match /swipes/{swipeId} {
        allow create: if request.auth != null;
        allow read, update, delete: if false; // Not needed by client
    }
    
    // Matches can be read if the user is part of the match.
    // Matches are created by the backend flow, not the client.
    match /matches/{matchId} {
        allow read: if request.auth != null && request.auth.uid in resource.data.userIds;
        allow create, update, delete: if false; // Created by backend
    }

    // A user can only access a chat document if they are a participant.
    match /chats/{chatId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.userIds;
      // Chat documents are created by the backend swipe flow
      allow create: if false; 
      
      // A user can only access messages if they are a participant in the chat.
      match /messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.userIds;
        // Do not allow message editing or deletion for now
        allow update, delete: if false;
      }
    }
  }
}

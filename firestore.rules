rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read public profiles, but only write to their own.
    match /users/{userId} {
      allow read: if true;
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Users can create swipes. They can read swipes they initiated or received.
    match /swipes/{swipeId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (resource.data.swiperId == request.auth.uid || resource.data.swipedId == request.auth.uid);
    }
    
    // Users can create matches. They can only read matches they are a part of.
    match /matches/{matchId} {
        allow create: if request.auth != null;
        allow read: if request.auth != null && request.auth.uid in resource.data.userIds;
    }

    // Users who are part of a chat can read/write to it.
    match /chats/{chatId} {
      allow read, create: if request.auth != null && request.auth.uid in resource.data.userIds;
      allow update: if request.auth != null && request.auth.uid in resource.data.userIds;

      // Messages can be read and created by users in the chat.
      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.userIds.hasAny([request.auth.uid]);
      }
    }
  }
}

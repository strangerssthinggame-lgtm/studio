rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Allow read, update, and delete only if the user is authenticated and the UID matches the document ID.
      // This is secure because it ensures users can only modify their own data.
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      
      // Allow any authenticated user to create their own user document.
      // The UID is enforced in the application logic to match the authenticated user.
      allow create: if request.auth != null;
    }

    match /swipes/{swipeId} {
        // Allow authenticated users to create swipes
        allow create: if request.auth != null;
        // Allow users to read swipes if they are either the swiper or the swiped user
        allow read: if request.auth != null && (resource.data.swiperId == request.auth.uid || resource.data.swipedId == request.auth.uid);
    }

    match /matches/{matchId} {
        // Allow read only if the user is part of the match
        allow read: if request.auth != null && request.auth.uid in resource.data.userIds;
        // Creation is handled by the handleSwipe server-side flow, so no direct client creation is needed.
        allow create: if false; 
    }

    match /chats/{chatId} {
       // Allow read/write only if the user is part of the chat
       allow read, write: if request.auth != null && request.auth.uid in resource.data.userIds;
    }
  }
}

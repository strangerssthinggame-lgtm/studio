rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
      allow delete: if false;
    }

    // Swipes can be created by the swiper. Reads are handled server-side.
    match /swipes/{swipeId} {
      allow create: if request.auth.uid == request.resource.data.swiperId;
      allow read, update, delete: if false;
    }

    // Matches can be read by participants. Creation is server-side.
    match /matches/{matchId} {
      allow read, create: if request.auth.uid in resource.data.userIds;
      allow update, delete: if false;
    }

    // Chat documents can only be accessed by the participants of the chat.
    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.userIds;
      // Create is handled server-side, but this allows for future client-side creation.
      allow create: if request.auth.uid in request.resource.data.userIds;
      allow delete: if false;

      // Messages can only be read or created by chat participants.
      match /messages/{messageId} {
        allow list, get: if get(/databases/$(database)/documents/chats/$(chatId)).data.userIds.hasAny([request.auth.uid]);
        allow create: if get(/databases/$(database)/documents/chats/$(chatId)).data.userIds.hasAny([request.auth.uid])
                      && request.auth.uid == request.resource.data.senderId;
        allow update, delete: if false;
      }
    }
  }
}